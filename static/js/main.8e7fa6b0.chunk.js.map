{"version":3,"sources":["firebase.js","components/SearchEmailResult.js","components/NavTitle.js","components/SearchByEmail.js","components/EachRequest.js","components/FriendRequest.js","components/SidebarChats.js","components/ChatList.js","components/Sidebar.js","components/ChatMessage.js","components/ChatRoomBody.js","components/ChatRoom.js","components/Chat.js","Screens/Login.js","App.js","serviceWorker.js","reducers/index.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SearchEmailResult","result","useState","requestReceived","setrequestReceived","requestRaised","setrequestRaised","roomId","setroomId","collection","rooms","roomStatus","setroomStatus","user","useSelector","state","login","console","log","useEffect","where","uid","onSnapshot","snapshot","count","docChanges","forEach","change","doc","id","data","status","onUpdateStatus","update","then","docRef","userRooms","add","catch","error","className","style","flex","fontSize","email","color","showStatus","onClick","friendDoc","createRoom","from","to","loggedInUser","displayName","sendFriendRequest","NavTitle","title","marginBottom","fontWeight","SearchByEmail","setEmail","searchedEmail","setsearchedEmail","emailErrorMessage","setemailErrorMessage","padding","placeholder","value","onChange","e","target","preventDefault","get","querySnapshot","empty","searchedPeople","push","newDoc","marginTop","fontFamily","length","map","key","EachRequest","friendrequest","requestdetail","FriendRequest","friendrequests","setfriendrequests","docs","textAlign","SidebarChats","chat","detailsOfFriend","setdetailsOfFriend","chatNamesUid","dispatch","useDispatch","type","payload","display","position","top","ChatList","chatList","setchatList","Sidebar","props","friendRequestCount","setfriendRequestCount","route","setRoute","unsubscribe","size","friendRequest","chooseRoute","Badge","badgeContent","signOut","setRoutes","ChatMessage","message","document","getElementsByClassName","scrollTo","scrollHeight","Date","getHours","getMinutes","ChatRoomBody","messages","setMessages","refallmessages","useRef","orderBy","ref","ChatRoom","chatInfo","setMessage","name","timestamp","FieldValue","serverTimestamp","Chat","selectedChat","selectChat","Login","Button","variant","signInWithPopup","usersRef","err","alert","App","selectedChatInfo","setSelectedChatInfo","onAuthStateChanged","sChatInfo","Boolean","window","location","hostname","match","appReducer","combineReducers","action","rootReducer","undefined","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0MAcMA,EAFcC,IAASC,cAVN,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,8CAKcC,YACjBC,EAAOV,IAASU,OAChBC,EAAW,IAAIX,IAASU,KAAKE,mBACnCD,EAASE,oBAAoB,CAC3BC,OAAQ,mBAGKf,Q,qHCsKAgB,MAnLf,YAAwC,IAAXC,EAAU,EAAVA,OAAU,EACSC,mBAAS,MADlB,mBAC9BC,EAD8B,KACbC,EADa,OAEKF,oBAAS,GAFd,mBAE9BG,EAF8B,KAEfC,EAFe,OAGTJ,mBAAS,MAHA,mBAG9BK,EAH8B,KAGtBC,EAHsB,OAIXN,mBAASlB,EAAGyB,WAAW,UAJZ,mBAI9BC,EAJ8B,aAKDR,mBAAS,OALR,mBAK9BS,EAL8B,KAKlBC,EALkB,KAMjCC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,QAE9CI,QAAQC,IAAI,eACZC,qBAAU,WACRT,EACGU,MAAM,WAAY,KAAMnB,EAAOoB,KAC/BD,MAAM,SAAU,KAAMP,EAAKQ,KAC3BC,YAAW,SAACC,GACX,IAAIC,EAAQ,EACZD,EAASE,aAAaC,SAAQ,SAAUC,GACtCnB,EAAUmB,EAAOC,IAAIC,IACrBzB,GAAmB,GACnBQ,EAAce,EAAOC,IAAIE,OAAOC,QAChCP,OAEY,IAAVA,GACFd,EACGU,MAAM,WAAY,KAAMP,EAAKQ,KAC7BD,MAAM,SAAU,KAAMnB,EAAOoB,KAC7BC,YAAW,SAACC,GAEXA,EAASE,aAAaC,SAAQ,SAAUC,GACtCnB,EAAUmB,EAAOC,IAAIC,IACrBvB,GAAiB,GACjBM,EAAce,EAAOC,IAAIE,OAAOC,mBAM3C,IACH,IAAMC,EAAiB,SAACD,GACtBrB,EACGkB,IAAIrB,GACJ0B,OAAO,CACNF,OAAQA,IAETG,MAAK,SAAUC,GACd,IAAIC,EAAYpD,EAAGyB,WAAW,aACf,aAAXsB,IACFK,EAAUC,IAAI,CACZhB,IAAKpB,EAAOoB,IACZd,OAAQA,IAEV6B,EAAUC,IAAI,CACZhB,IAAKR,EAAKQ,IACVd,OAAQA,QAIb+B,OAAM,SAAUC,QAuGrB,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,eAAeC,MAAO,CAAEC,KAAM,IAC3C,yBACED,MAAO,CACLE,SAAU,SAGX1C,EAAO2C,OAtFG,WACjB,GAAmB,cAAfjC,EAA4B,CAC9B,GAAIR,EACF,OACE,yBACEsC,MAAO,CACLI,MAAO,SAFX,8BASJ,GAAIxC,EACF,OACE,yBACEoC,MAAO,CACLI,MAAO,SAFX,sBASC,IAAmB,aAAflC,EACT,OACE,yBACE8B,MAAO,CACLI,MAAO,SAFX,WAQG,GAAmB,aAAflC,EACT,OACE,yBACE8B,MAAO,CACLI,MAAO,SAFX,aAoDCC,IAzCc,cAAfnC,EAgBsB,aAAfA,GAEe,aAAfA,EADF,6BAAM,IAKX,yBAAK6B,UAAU,cAAcO,QAAS,kBA5FlB,SAACC,GACzB,IAAIC,EAAa,CACflB,OAAQ,YACRmB,KAAM,KACNC,GAAI,MAEFC,EAAe,CACjB/B,IAAKR,EAAKQ,IACVgC,YAAaxC,EAAKwC,YAClBT,MAAO/B,EAAK+B,OAEdK,EAAWC,KAAX,eACKE,GAELH,EAAWE,GAAX,eACKH,GAGLtC,EACG2B,IAAIY,GACJf,MAAK,SAAUC,OACfG,OAAM,SAAUC,OAuE6Be,CAAkBrD,KAC5D,kBAAC,IAAD,OAtBAE,EAEA,6BACE,yBAAKqC,UAAU,UAAUO,QAAS,kBAAMf,EAAe,cACrD,kBAAC,IAAD,OAEF,yBAAKQ,UAAU,UAAUO,QAAS,kBAAMf,EAAe,cACrD,kBAAC,IAAD,QAKJ3B,EACK,6BAAM,SADf,ICxISkD,EAdE,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClB,OACE,yBACEf,MAAO,CACLE,SAAU,OACVc,aAAc,OACdC,WAAY,QAGbF,ICoEQG,MAzEf,WAA0B,IAAD,EACGzD,mBAAS,IADZ,mBAChB0C,EADgB,KACTgB,EADS,OAEmB1D,mBAAS,IAF5B,mBAEhB2D,EAFgB,KAEDC,EAFC,OAG2B5D,oBAAS,GAHpC,mBAGhB6D,EAHgB,KAGGC,EAHH,KA4BvB,OACE,yBACEvB,MAAO,CACLwB,QAAS,cAGX,kBAAC,EAAD,CAAUT,MAAM,WAEhB,yBAAKhB,UAAU,4BACb,kBAAC,IAAD,MACA,8BACE,2BACE0B,YAAY,wBACZC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOH,UAErC,4BAAQpB,QAvCO,SAACsB,GACtBA,EAAEE,iBACFvF,EAAGyB,WAAW,SACXW,MAAM,QAAS,KAAMwB,GACrB4B,MACAtC,MAAK,SAAUuC,GACd,GAAIA,EAAcC,MAChBV,GAAqB,OAChB,CACL,IAAIW,EAAiB,GACrBF,EAAc/C,SAAQ,SAAUE,GAE9B+C,EAAeC,KAAK,CAAE/C,GAAID,EAAIC,GAAIgD,OAAQjD,EAAIE,YAEhDgC,EAAiBa,GACjBX,GAAqB,OAGxB1B,OAAM,SAAUC,GACftB,QAAQC,IAAI,4BAA6BqB,QAoBvC,YAGHwB,EACC,yBAAKtB,MAAO,CAAEI,MAAO,UAAWa,WAAY,SAA5C,6BAIA,GAEF,yBACEjB,MAAO,CACLqC,UAAW,OACXC,WAAY,aACZlC,MAAO,YAJX,UAU0B,IAAzBgB,EAAcmB,OACXnB,EAAcoB,KAAI,SAACrD,GAAD,OAChB,kBAAC,EAAD,CAAmBsD,IAAKtD,EAAIC,GAAI5B,OAAQ2B,EAAIiD,YAE9C,K,kCCIKM,MAxEf,YAAyC,IA0BpBC,EA1BEC,EAAiB,EAAjBA,cAAiB,EACZnF,mBAASlB,EAAGyB,WAAW,UADX,mBAC/BC,EAD+B,KAEhCsB,GAFgC,KAEf,SAACD,EAAQqD,GAC9BnE,QAAQC,IAAIkE,GACZ1E,EACGkB,IAAIwD,EAAcvD,IAClBI,OAAO,CACNF,OAAQA,IAETG,MAAK,SAAUC,GACd,IAAIC,EAAYpD,EAAGyB,WAAW,aACf,aAAXsB,IACFK,EAAUC,IAAI,CACZhB,IAAK+D,EAAcP,OAAO3B,KAAK7B,IAC/Bd,OAAQ6E,EAAcvD,KAExBO,EAAUC,IAAI,CACZhB,IAAK+D,EAAcP,OAAO1B,GAAG9B,IAC7Bd,OAAQ6E,EAAcvD,SAI3BS,OAAM,SAAUC,SAsBrB,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,OAEF,yBAAKA,UAAU,eAAeC,MAAO,CAAEC,KAAM,IAC3C,yBACED,MAAO,CACLE,SAAU,aAFd,UAKM0C,EAAcR,OAAO3B,KAAKN,MALhC,KAME,0BACEH,MAAO,CACLI,MAAO,SAGwB,cAAhCwC,EAAcR,OAAO9C,OAClB,kCACA,cArCKqD,EAyCJC,EAvCX,6BACE,yBACE7C,UAAU,UACVO,QAAS,kBAAMf,EAAe,WAAYoD,KAE1C,kBAAC,IAAD,OAEF,yBACE5C,UAAU,UACVO,QAAS,kBAAMf,EAAe,WAAYoD,KAE1C,kBAAC,IAAD,WCUKE,EAhDO,WAAO,IAAD,EACApF,mBAASlB,EAAGyB,WAAW,UADvB,mBACnBC,EADmB,aAEkBR,mBAAS,KAF3B,mBAEnBqF,EAFmB,KAEHC,EAFG,KAGtBnE,EAAMP,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,KAAKQ,OAClDF,qBAAU,WACRT,EACGU,MAAM,SAAU,KAAM,aACtBA,MAAM,SAAU,KAAMC,GACtBC,YAAW,SAACC,GAEXiE,EACEjE,EAASkE,KAAKR,KAAI,SAAUrD,GAC1B,MAAO,CAAEC,GAAID,EAAIC,GAAIgD,OAAQjD,EAAIE,iBAMxC,CAACpB,EAAOW,IAOX,OACE,yBACEoB,MAAO,CACLwB,QAAS,cAGX,kBAAC,EAAD,CAAUT,MAAM,aACW,IAA1B+B,EAAeP,OACd,yBACEvC,MAAO,CACLiD,UAAW,SACXzB,QAAS,aAHb,mBAZGsB,EAAeN,KAAI,SAACG,GAAD,OACxB,kBAAC,EAAD,CAAaF,IAAKE,EAAcvD,GAAIwD,cAAeD,S,SCmD1CO,G,MA3EM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACa1F,mBAAS,MADtB,mBAC1B2F,EAD0B,KACTC,EADS,KAE7BzE,EAAMP,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,KAAKQ,OAC1CS,EAAS8D,EAAT9D,KAERX,qBAAU,WACRnC,EAAGyB,WAAW,aACXW,MAAM,SAAU,KAAMU,EAAKvB,QAC3Ba,MAAM,MAAO,KAAMC,GACnBC,YAAW,SAACC,GACX,IAAIwE,EAAexE,EAASkE,KAAKR,KAAI,SAACrD,GAAD,OAASA,EAAIE,OAAOT,OACrD0E,EAAa,IACf/G,EAAGyB,WAAW,SACXW,MAAM,MAAO,KAAM2E,EAAa,IAChCzE,YAAW,SAACC,GACXuE,EAAmBvE,EAASkE,KAAKR,KAAI,SAACrD,GAAD,OAASA,EAAIE,UAAQ,YAInE,CAACA,EAAKvB,OAAQc,IACjB,IAAM2E,EAAWC,cAOjB,OAAOJ,EACL,yBAAKrD,UAAU,UAAUO,QAPR,WACjBiD,EAAS,CACPE,KAAM,iBACNC,QAAS,CAAE5F,OAAQuB,EAAKvB,OAAQsF,gBAAiBA,OAKjD,yBACEpD,MAAO,CACLC,KAAM,IAGR,yBACED,MAAO,CACL2D,QAAS,OACT3C,aAAc,QAGhB,yBACEhB,MAAO,CACLC,KAAM,IACNC,SAAU,OACVe,WAAY,QAGbmC,EAAkBA,EAAgBxC,YAAc,IAEnD,yBACEZ,MAAO,CACLE,SAAU,OACV0D,SAAU,WACVC,IAAK,MACLzD,MAAO,YALX,aAWF,yBACEJ,MAAO,CACLI,MAAO,UACPF,SAAU,SAHd,uBAWJ,KClCW4D,MApCf,WACmBN,cAAjB,IADkB,EAEQ/F,mBAASlB,EAAGyB,WAAW,UAF/B,mBAEXC,EAFW,aAGcR,mBAAS,KAHvB,mBAGXsG,EAHW,KAGDC,EAHC,KAIdpF,EAAMP,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,KAAKQ,OAalD,OAZAF,qBAAU,WACRnC,EAAGyB,WAAW,aACXW,MAAM,MAAO,KAAMC,GACnBC,YAAW,SAACC,GACXkF,EACElF,EAASkE,KAAKR,KAAI,SAACrD,GACjB,MAAO,CAAEC,GAAID,EAAIC,GAAIC,KAAMF,EAAIE,iBAItC,CAACpB,EAAOW,IAGT,yBAAKoB,MAAO,CAAEwB,QAAS,cACrB,kBAAC,EAAD,CAAUT,MAAM,UACK,IAApBgD,EAASxB,OACRwB,EAASvB,KAAI,SAACW,GAAD,OAAU,kBAAC,EAAD,CAAcV,IAAKU,EAAK/D,GAAI+D,KAAMA,OAEzD,yBACEnD,MAAO,CACLiD,UAAW,SACXzB,QAAS,aAHb,iCCoEOyC,EAnFC,SAACC,GACf,IAAMjG,EAAQ1B,EAAGyB,WAAW,SADH,EAE2BP,mBAAS,GAFpC,mBAElB0G,EAFkB,KAEEC,EAFF,OAGC3G,mBAAS,QAHV,mBAGlB4G,EAHkB,KAGXC,EAHW,KAInBf,EAAWC,cACbpF,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,QAC9CM,qBAAU,WACR,IAAM6F,EAActG,EACjBU,MAAM,SAAU,KAAM,aACtBA,MAAM,SAAU,KAAMP,EAAKQ,KAC3BC,YAAW,SAACC,GACXsF,EAAsBtF,EAAS0F,MAC/B,IAAIC,EAAgB,GACpB3F,EAASE,aAAaC,SAAQ,SAAUC,GACtCV,QAAQC,IAAI,UACZgG,EAActC,KAAK,CAAE/C,GAAIF,EAAOC,IAAIC,GAAIgD,OAAQlD,EAAOC,IAAIE,eAGjE,OAAO,WACLkF,OAED,CAACtG,EAAOG,EAAKQ,MAChB,IAYM8F,EAAc,SAACpF,GACnBgF,EAAShF,IAEX,OACE,yBAAKS,UAAU,WACb,yBAAKA,UAAU,oBACb,yBACEC,MAAO,CAAEI,MAAiB,SAAViE,EAAmB,UAAY,IAC/CtE,UAAU,UACVO,QAAS,kBAAMoE,EAAY,UAE3B,kBAAC,IAAD,OAEF,yBACE1E,MAAO,CAAEI,MAAiB,WAAViE,EAAqB,UAAY,IACjDtE,UAAU,UACVO,QAAS,kBAAMoE,EAAY,YAE3B,kBAAC,IAAD,OAEF,yBACE1E,MAAO,CAAEI,MAAiB,aAAViE,EAAuB,UAAY,IACnDtE,UAAU,UACVO,QAAS,kBAAMoE,EAAY,cAE3B,kBAACC,EAAA,EAAD,CAAOC,aAAcT,EAAoB/D,MAAM,WAC7C,kBAAC,IAAD,QAGJ,yBACEJ,MAAO,CAAEqC,UAAW,QACpBtC,UAAU,UACVO,QAAS,kBACPpD,EAAK2H,UAAUpF,MACb,WACE8D,EAAS,CAAEE,KAAM,SAAUC,QAAS,UAEtC,SAAU5D,SAId,kBAAC,IAAD,QAGJ,yBAAKC,UAAU,kBAxDD,WAChB,OAAQsE,GACN,IAAK,OACH,OAAO,kBAAC,EAAD,MACT,IAAK,SACH,OAAO,kBAAC,EAAD,MACT,IAAK,WACH,OAAO,kBAAC,EAAD,MACT,QACE,OAAO,kBAAC,EAAD,OA+CwBS,M,MCnExBC,MAtBf,YAAmC,IAAZC,EAAW,EAAXA,QACjBpG,EAAMP,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,KAAKQ,OASlD,OARAF,qBAAU,WACRuG,SACGC,uBAAuB,kBAAkB,GACzCC,SACC,EACAF,SAASC,uBAAuB,kBAAkB,GAAGE,gBAExD,IAED,yBACErF,UAAS,wBACPiF,EAAQ5G,KAAKQ,KAAOA,EAAM,eAAiB,KAG5CoG,EAAQA,QACT,0BAAMjF,UAAU,mBAAhB,WAAsC,IAAIsF,MAAOC,WAAjD,aAA+D,IAAID,MAAOE,iBCYjEC,G,MA5BM,SAAC,GAAgB,IAAd1H,EAAa,EAAbA,OAAa,EACHL,mBAAS,IADN,mBAC5BgI,EAD4B,KAClBC,EADkB,KAE7BC,EAAiBC,iBAAO,MAa9B,OAZAlH,qBAAU,WACRnC,EAAGyB,WAAW,SACXmB,IAAIrB,GACJE,WAAW,YACX6H,QAAQ,YAAa,OACrBhH,YAAW,SAACC,GACX4G,EACE5G,EAASkE,KAAKR,KAAI,SAACrD,GAAD,MAAU,CAAEC,GAAID,EAAIC,GAAIC,KAAMF,EAAIE,iBAGzD,CAACvB,IACJU,QAAQC,IAAIgH,GAEV,yBAAK1F,UAAU,cACb,yBAAKA,UAAU,iBAAiB+F,IAAKH,GACd,IAApBF,EAASlD,OACNkD,EAASjD,KAAI,SAACwC,GAAD,OACX,kBAAC,EAAD,CAAavC,IAAKuC,EAAQ5F,GAAI4F,QAASA,EAAQ3F,UAEjD,OCkDG0G,EApEE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd5H,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,QADb,EAEHX,mBAAS,IAFN,mBAE1BuH,EAF0B,KAEjBiB,EAFiB,KA4BjC,OACE,kBAAC,WAAD,KACE,yBAAKlG,UAAU,gBACb,yBAAKA,UAAU,oBACb,wBAAIC,MAAO,CAAEI,MAAO,UACjB4F,EAAS5C,gBAAgBxC,aAE5B,yBACEZ,MAAO,CACLiB,WAAY,MACZf,SAAU,OACVmC,UAAW,MACXjC,MAAO,YALX,iCAaJ,kBAAC,EAAD,CAActC,OAAQkI,EAASlI,SAE/B,yBAAKiC,UAAU,gBACb,8BACE,2BACE0D,KAAK,OACLhC,YAAY,iBACZyE,KAAK,UACLxE,MAAOsD,EACPrD,SAAU,SAACC,GAAD,OAAOqE,EAAWrE,EAAEC,OAAOH,UAEvC,4BAAQ+B,KAAK,SAASnD,QAxDR,SAACsB,GACrBA,EAAEE,iBACFvF,EAAGyB,WAAW,SACXmB,IAAI6G,EAASlI,QACbE,WAAW,YACX4B,IAAI,CACHoF,UACA5G,KAAM,CACJQ,IAAKR,EAAKQ,IACVuB,MAAO/B,EAAK+B,MACZS,YAAaxC,EAAKwC,aAEpBuF,UAAW3J,IAASS,UAAUmJ,WAAWC,oBAE1C5G,MAAK,SAAUC,GAEduF,SACGC,uBAAuB,kBAAkB,GACzCC,SACC,EACAF,SAASC,uBAAuB,kBAAkB,GAAGE,cAEzDa,EAAW,SAkCT,oBC1CKK,EApBF,WACX,IAAIC,EAAelI,aAAY,SAACC,GAAD,OAAWA,EAAMkI,WAAWD,gBAC3D,OACE,yBAAKxG,UAAU,QACZwG,EACC,kBAAC,EAAD,CAAUP,SAAUO,IAEpB,yBACEvG,MAAO,CACLI,MAAO,UACPF,SAAU,SAHd,sC,SCsCOuG,MA5Cf,SAAevC,GACb,IAAMX,EAAWC,cAkCjB,OACE,6BACE,kBAACkD,EAAA,EAAD,CAAQC,QAAQ,YAAYvG,MAAM,UAAUE,QAnClC,WACZpD,EACG0J,gBAAgBzJ,GAChBsC,MAAK,SAACjC,GACL,IAAMqJ,EAAWtK,EAAGyB,WAAW,SAC/B6I,EACGlI,MAAM,QAAS,KAAMnB,EAAOY,KAAK+B,OACjC4B,MACAtC,MAAK,SAAUuC,GACd,IAAIjD,EAAQ,EACZiD,EAAc/C,SAAQ,SAAUE,GAC9BJ,OAEY,IAAVA,EACF8H,EACGjH,IAAI,CACHhB,IAAKpB,EAAOY,KAAKQ,IACjBuB,MAAO3C,EAAOY,KAAK+B,MACnBS,YAAapD,EAAOY,KAAKwC,cAE1BnB,MAAK,SAAUC,GACd6D,EAAS,CAAEE,KAAM,QAASC,QAASlG,EAAOY,UAE3CyB,OAAM,SAAUC,OAEnByD,EAAS,CAAEE,KAAM,QAASC,QAASlG,EAAOY,UAG7CyB,OAAM,SAAUC,UAEpBD,OAAM,SAACiH,GAAD,OAASC,MAAMD,QAKtB,8BCYSE,MA/Cf,WACE,IAAMzD,EAAWC,cADJ,EAEmC/F,mBAAS,MAF5C,mBAENwJ,EAFM,KAEYC,EAFZ,KAGbxI,qBAAU,WACRxB,EAAKiK,oBAAmB,SAAU/I,GAE9BmF,EADEnF,EACO,CAAEqF,KAAM,QAASC,QAAStF,GAG1B,CAAEqF,KAAM,QAASC,QAAS,YAGtC,IACH,IAAItF,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,MAAMH,QAoB9C,OACE,yBAAK2B,UAAU,OACX3B,EAGA,yBAAK2B,UAAU,aACb,kBAAC,EAAD,CAASyG,WAAY,SAACY,GAAD,OAAeF,EAAoBE,MACxD,kBAAC,EAAD,CAAMH,iBAAkBA,KAJ1B,kBAAC,EAAD,QChCYI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCSAC,EAAaC,YAAgB,CACjCpJ,MAzBY,WAAqC,IAApCD,EAAmC,uDAA3B,CAAEF,KAAM,MAAQwJ,EAAW,uCAChD,OAAQA,EAAOnE,MACb,IAAK,QACH,OAAO,2BACFnF,GADL,IAEEF,KAAMwJ,EAAOlE,UAEjB,QACE,OAAOpF,IAkBXkI,WAdiB,WAA6C,IAA5ClI,EAA2C,uDAAnC,CAAEiI,aAAc,MAAQqB,EAAW,uCAC7D,OAAQA,EAAOnE,MACb,IAAK,iBACH,OAAO,2BACFnF,GADL,IAEEiI,aAAcqB,EAAOlE,UAEzB,QACE,OAAOpF,MAgBEuJ,EAPK,SAACvJ,EAAOsJ,GAK1B,MAHoB,WAAhBA,EAAOnE,OACTnF,OAAQwJ,GAEHJ,EAAWpJ,EAAOsJ,I,QC3BrBG,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,IAAMO,WAAP,KACE,kBAAC,EAAD,QAGJrD,SAASsD,eAAe,SFiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjJ,MAAK,SAAAkJ,GACJA,EAAaC,gBAEd/I,OAAM,SAAAC,GACLtB,QAAQsB,MAAMA,EAAMkF,a","file":"static/js/main.8e7fa6b0.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA738-i7L9iXa9pfu9anu8IrLRFnu9yXAI\",\n  authDomain: \"whatsappclone-1b4fd.firebaseapp.com\",\n  databaseURL: \"https://whatsappclone-1b4fd.firebaseio.com\",\n  projectId: \"whatsappclone-1b4fd\",\n  storageBucket: \"whatsappclone-1b4fd.appspot.com\",\n  messagingSenderId: \"541186087806\",\n  appId: \"1:541186087806:web:8f8398e7750f5ddf20312f\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\nexport { auth, provider };\nexport default db;\n","import React, { useEffect, useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport { useSelector } from \"react-redux\";\nimport db from \"../firebase\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nfunction SearchEmailResult({ result }) {\n  const [requestReceived, setrequestReceived] = useState(null);\n  const [requestRaised, setrequestRaised] = useState(false);\n  const [roomId, setroomId] = useState(null);\n  const [rooms, setrooms] = useState(db.collection(\"rooms\"));\n  const [roomStatus, setroomStatus] = useState(null);\n  let user = useSelector((state) => state.login.user);\n\n  console.log(\"rerendering\");\n  useEffect(() => {\n    rooms\n      .where(\"from.uid\", \"==\", result.uid)\n      .where(\"to.uid\", \"==\", user.uid)\n      .onSnapshot((snapshot) => {\n        let count = 0;\n        snapshot.docChanges().forEach(function (change) {\n          setroomId(change.doc.id);\n          setrequestReceived(true);\n          setroomStatus(change.doc.data().status);\n          count++;\n        });\n        if (count === 0) {\n          rooms\n            .where(\"from.uid\", \"==\", user.uid)\n            .where(\"to.uid\", \"==\", result.uid)\n            .onSnapshot((snapshot) => {\n              let count = 0;\n              snapshot.docChanges().forEach(function (change) {\n                setroomId(change.doc.id);\n                setrequestRaised(true);\n                setroomStatus(change.doc.data().status);\n                count++;\n              });\n            });\n        }\n      });\n  }, []);\n  const onUpdateStatus = (status) => {\n    rooms\n      .doc(roomId)\n      .update({\n        status: status,\n      })\n      .then(function (docRef) {\n        let userRooms = db.collection(\"userRooms\");\n        if (status === \"accepted\") {\n          userRooms.add({\n            uid: result.uid,\n            roomId: roomId,\n          });\n          userRooms.add({\n            uid: user.uid,\n            roomId: roomId,\n          });\n        }\n      })\n      .catch(function (error) {\n        // The document probably doesn't exist.\n      });\n  };\n\n  const sendFriendRequest = (friendDoc) => {\n    let createRoom = {\n      status: \"requested\",\n      from: null,\n      to: null,\n    };\n    let loggedInUser = {\n      uid: user.uid,\n      displayName: user.displayName,\n      email: user.email,\n    };\n    createRoom.from = {\n      ...loggedInUser,\n    };\n    createRoom.to = {\n      ...friendDoc,\n    };\n\n    rooms\n      .add(createRoom)\n      .then(function (docRef) {})\n      .catch(function (error) {});\n  };\n  const showStatus = () => {\n    if (roomStatus === \"requested\") {\n      if (requestReceived) {\n        return (\n          <div\n            style={{\n              color: \"grey\",\n            }}\n          >\n            Requested to chat with you\n          </div>\n        );\n      }\n      if (requestRaised) {\n        return (\n          <div\n            style={{\n              color: \"grey\",\n            }}\n          >\n            Request raised\n          </div>\n        );\n      }\n    } else if (roomStatus === \"accepted\") {\n      return (\n        <div\n          style={{\n            color: \"grey\",\n          }}\n        >\n          Friends\n        </div>\n      );\n    } else if (roomStatus === \"rejected\") {\n      return (\n        <div\n          style={{\n            color: \"grey\",\n          }}\n        >\n          Rejected\n        </div>\n      );\n    }\n  };\n  const showIcons = () => {\n    if (roomStatus === \"requested\") {\n      if (requestReceived) {\n        return (\n          <div>\n            <div className=\"request\" onClick={() => onUpdateStatus(\"accepted\")}>\n              <CheckIcon />\n            </div>\n            <div className=\"request\" onClick={() => onUpdateStatus(\"rejected\")}>\n              <ClearIcon />\n            </div>\n          </div>\n        );\n      }\n      if (requestRaised) {\n        return <div>{\"\"}</div>;\n      }\n    } else if (roomStatus === \"rejected\") {\n      return <div>{\"\"}</div>;\n    } else if (roomStatus === \"accepted\") {\n      return <div>{\"\"}</div>;\n    } else {\n      return (\n        <div className=\"sendRequest\" onClick={() => sendFriendRequest(result)}>\n          <PersonAddIcon />\n        </div>\n      );\n    }\n  };\n  return (\n    <div className=\"emailResults\">\n      <div className=\"emailIcon\">\n        <AccountCircleIcon />\n      </div>\n      <div className=\"emailAddress\" style={{ flex: 1 }}>\n        <div\n          style={{\n            fontSize: \"18px\",\n          }}\n        >\n          {result.email}\n        </div>\n        {showStatus()}\n      </div>\n      {showIcons()}\n    </div>\n  );\n}\n\nexport default SearchEmailResult;\n","import React from \"react\";\n\nconst NavTitle = ({ title }) => {\n  return (\n    <div\n      style={{\n        fontSize: \"30px\",\n        marginBottom: \"20px\",\n        fontWeight: \"600\",\n      }}\n    >\n      {title}\n    </div>\n  );\n};\n\nexport default NavTitle;\n","import React, { useState } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport db from \"../firebase\";\nimport SearchEmailResult from \"./SearchEmailResult\";\nimport NavTitle from \"./NavTitle\";\n\nfunction SearchByEmail() {\n  const [email, setEmail] = useState(\"\");\n  const [searchedEmail, setsearchedEmail] = useState([]);\n  const [emailErrorMessage, setemailErrorMessage] = useState(false);\n\n  const searchforemail = (e) => {\n    e.preventDefault();\n    db.collection(\"users\")\n      .where(\"email\", \"==\", email)\n      .get()\n      .then(function (querySnapshot) {\n        if (querySnapshot.empty) {\n          setemailErrorMessage(true);\n        } else {\n          let searchedPeople = [];\n          querySnapshot.forEach(function (doc) {\n            // doc.data() is never undefined for query doc snapshots\n            searchedPeople.push({ id: doc.id, newDoc: doc.data() });\n          });\n          setsearchedEmail(searchedPeople);\n          setemailErrorMessage(false);\n        }\n      })\n      .catch(function (error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"15px 15px\",\n      }}\n    >\n      <NavTitle title=\"Search\" />\n      {/* search Input field */}\n      <div className=\"sidebar__searchContainer\">\n        <SearchIcon />\n        <form>\n          <input\n            placeholder=\"Enter email to search\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <button onClick={searchforemail}>search</button>\n        </form>\n      </div>\n      {emailErrorMessage ? (\n        <div style={{ color: \"#fd2e2e\", fontWeight: \"bold\" }}>\n          This email does not exist\n        </div>\n      ) : (\n        \"\"\n      )}\n      <div\n        style={{\n          marginTop: \"15px\",\n          fontFamily: \"sans-serif\",\n          color: \"#515050\",\n        }}\n      >\n        PEOPLE\n      </div>\n\n      {searchedEmail.length !== 0\n        ? searchedEmail.map((doc) => (\n            <SearchEmailResult key={doc.id} result={doc.newDoc} />\n          ))\n        : \"\"}\n    </div>\n  );\n}\n\nexport default SearchByEmail;\n","import React, { useState } from \"react\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport db from \"../firebase\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\n\nfunction EachRequest({ requestdetail }) {\n  const [rooms, setrooms] = useState(db.collection(\"rooms\"));\n  const onUpdateStatus = (status, friendrequest) => {\n    console.log(friendrequest);\n    rooms\n      .doc(friendrequest.id)\n      .update({\n        status: status,\n      })\n      .then(function (docRef) {\n        let userRooms = db.collection(\"userRooms\");\n        if (status === \"accepted\") {\n          userRooms.add({\n            uid: friendrequest.newDoc.from.uid,\n            roomId: friendrequest.id,\n          });\n          userRooms.add({\n            uid: friendrequest.newDoc.to.uid,\n            roomId: friendrequest.id,\n          });\n        }\n      })\n      .catch(function (error) {\n        // The document probably doesn't exist.\n      });\n  };\n  const showIcons = (friendrequest) => {\n    return (\n      <div>\n        <div\n          className=\"request\"\n          onClick={() => onUpdateStatus(\"accepted\", friendrequest)}\n        >\n          <CheckIcon />\n        </div>\n        <div\n          className=\"request\"\n          onClick={() => onUpdateStatus(\"rejected\", friendrequest)}\n        >\n          <ClearIcon />\n        </div>\n      </div>\n    );\n  };\n  return (\n    <div className=\"emailResults\">\n      <div className=\"emailIcon\">\n        <AccountCircleIcon />\n      </div>\n      <div className=\"emailAddress\" style={{ flex: 1 }}>\n        <div\n          style={{\n            fontSize: \".9375rem\",\n          }}\n        >\n          {`${requestdetail.newDoc.from.email} `}\n          <span\n            style={{\n              color: \"grey\",\n            }}\n          >\n            {requestdetail.newDoc.status === \"requested\"\n              ? \"Has requested to be your friend\"\n              : \"Friends\"}\n          </span>\n        </div>\n      </div>\n      {showIcons(requestdetail)}\n    </div>\n  );\n}\n\nexport default EachRequest;\n","import React, { useEffect, useState } from \"react\";\nimport db from \"../firebase\";\nimport { useSelector } from \"react-redux\";\n\nimport NavTitle from \"./NavTitle\";\nimport EachRequest from \"./EachRequest\";\n\nconst FriendRequest = () => {\n  const [rooms, setrooms] = useState(db.collection(\"rooms\"));\n  const [friendrequests, setfriendrequests] = useState([]);\n  let uid = useSelector((state) => state.login.user.uid);\n  useEffect(() => {\n    rooms\n      .where(\"status\", \"==\", \"requested\")\n      .where(\"to.uid\", \"==\", uid)\n      .onSnapshot((snapshot) => {\n        // let friendRequest = [];\n        setfriendrequests(\n          snapshot.docs.map(function (doc) {\n            return { id: doc.id, newDoc: doc.data() };\n          })\n        );\n        // let allFriendRequests = [...friendrequests, ...friendRequest];\n        // setfriendrequests(allFriendRequests);\n      });\n  }, [rooms, uid]);\n\n  const showFriendRequest = () => {\n    return friendrequests.map((friendrequest) => (\n      <EachRequest key={friendrequest.id} requestdetail={friendrequest} />\n    ));\n  };\n  return (\n    <div\n      style={{\n        padding: \"15px 15px\",\n      }}\n    >\n      <NavTitle title=\"Requests\" />\n      {friendrequests.length === 0 ? (\n        <div\n          style={{\n            textAlign: \"center\",\n            padding: \"15px 0px\",\n          }}\n        >\n          No requests yet\n        </div>\n      ) : (\n        showFriendRequest()\n      )}\n    </div>\n  );\n};\n\nexport default FriendRequest;\n","import React, { useEffect, useState } from \"react\";\nimport \"./SidebarChats.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport db from \"../firebase\";\n\nconst SidebarChats = ({ chat }) => {\n  const [detailsOfFriend, setdetailsOfFriend] = useState(null);\n  let uid = useSelector((state) => state.login.user.uid);\n  const { data } = chat;\n\n  useEffect(() => {\n    db.collection(\"userRooms\")\n      .where(\"roomId\", \"==\", data.roomId)\n      .where(\"uid\", \"!=\", uid)\n      .onSnapshot((snapshot) => {\n        let chatNamesUid = snapshot.docs.map((doc) => doc.data().uid);\n        if (chatNamesUid[0]) {\n          db.collection(\"users\")\n            .where(\"uid\", \"==\", chatNamesUid[0])\n            .onSnapshot((snapshot) => {\n              setdetailsOfFriend(snapshot.docs.map((doc) => doc.data())[0]);\n            });\n        }\n      });\n  }, [data.roomId, uid]);\n  const dispatch = useDispatch();\n  const selectChat = () => {\n    dispatch({\n      type: \"selectedtochat\",\n      payload: { roomId: data.roomId, detailsOfFriend: detailsOfFriend },\n    });\n  };\n  return detailsOfFriend ? (\n    <div className=\"navchat\" onClick={selectChat}>\n      <div\n        style={{\n          flex: 1,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            marginBottom: \"8px\",\n          }}\n        >\n          <div\n            style={{\n              flex: \"1\",\n              fontSize: \"17px\",\n              fontWeight: \"700\",\n            }}\n          >\n            {detailsOfFriend ? detailsOfFriend.displayName : \"\"}\n          </div>\n          <div\n            style={{\n              fontSize: \"13px\",\n              position: \"relative\",\n              top: \"4px\",\n              color: \"#aab0b7\",\n            }}\n          >\n            10:43 pm\n          </div>\n        </div>\n        <div\n          style={{\n            color: \"#707479\",\n            fontSize: \"15px\",\n          }}\n        >\n          Hello How are you\n        </div>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default SidebarChats;\n","import React, { useEffect, useState } from \"react\";\nimport NavTitle from \"./NavTitle\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport SidebarChats from \"./SidebarChats\";\nimport db from \"../firebase\";\n\nfunction ChatList() {\n  const dispatch = useDispatch();\n  const [rooms, setrooms] = useState(db.collection(\"rooms\"));\n  const [chatList, setchatList] = useState([]);\n  let uid = useSelector((state) => state.login.user.uid);\n  useEffect(() => {\n    db.collection(\"userRooms\")\n      .where(\"uid\", \"==\", uid)\n      .onSnapshot((snapshot) => {\n        setchatList(\n          snapshot.docs.map((doc) => {\n            return { id: doc.id, data: doc.data() };\n          })\n        );\n      });\n  }, [rooms, uid]);\n\n  return (\n    <div style={{ padding: \"15px 15px\" }}>\n      <NavTitle title=\"chats\" />\n      {chatList.length !== 0 ? (\n        chatList.map((chat) => <SidebarChats key={chat.id} chat={chat} />)\n      ) : (\n        <div\n          style={{\n            textAlign: \"center\",\n            padding: \"15px 0px\",\n          }}\n        >\n          Search someone to chat with\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ChatList;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Sidebar.css\";\nimport db from \"../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport SearchByEmail from \"./SearchByEmail\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { auth } from \"../firebase\";\nimport FriendRequest from \"./FriendRequest\";\nimport Badge from \"@material-ui/core/Badge\";\nimport ChatList from \"./ChatList\";\n\nconst Sidebar = (props) => {\n  const rooms = db.collection(\"rooms\");\n  const [friendRequestCount, setfriendRequestCount] = useState(0);\n  const [route, setRoute] = useState(\"chat\");\n  const dispatch = useDispatch();\n  let user = useSelector((state) => state.login.user);\n  useEffect(() => {\n    const unsubscribe = rooms\n      .where(\"status\", \"==\", \"requested\")\n      .where(\"to.uid\", \"==\", user.uid)\n      .onSnapshot((snapshot) => {\n        setfriendRequestCount(snapshot.size);\n        let friendRequest = [];\n        snapshot.docChanges().forEach(function (change) {\n          console.log(\"change\");\n          friendRequest.push({ id: change.doc.id, newDoc: change.doc.data() });\n        });\n      });\n    return () => {\n      unsubscribe();\n    };\n  }, [rooms, user.uid]);\n  const setRoutes = () => {\n    switch (route) {\n      case \"chat\":\n        return <ChatList />;\n      case \"search\":\n        return <SearchByEmail />;\n      case \"requests\":\n        return <FriendRequest />;\n      default:\n        return <ChatList />;\n    }\n  };\n  const chooseRoute = (status) => {\n    setRoute(status);\n  };\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__options\">\n        <div\n          style={{ color: route === \"chat\" ? \"#1a73e8\" : \"\" }}\n          className=\"navitem\"\n          onClick={() => chooseRoute(\"chat\")}\n        >\n          <ChatIcon />\n        </div>\n        <div\n          style={{ color: route === \"search\" ? \"#1a73e8\" : \"\" }}\n          className=\"navitem\"\n          onClick={() => chooseRoute(\"search\")}\n        >\n          <SearchIcon />\n        </div>\n        <div\n          style={{ color: route === \"requests\" ? \"#1a73e8\" : \"\" }}\n          className=\"navitem\"\n          onClick={() => chooseRoute(\"requests\")}\n        >\n          <Badge badgeContent={friendRequestCount} color=\"primary\">\n            <NotificationsIcon />\n          </Badge>\n        </div>\n        <div\n          style={{ marginTop: \"auto\" }}\n          className=\"navitem\"\n          onClick={() =>\n            auth.signOut().then(\n              function () {\n                dispatch({ type: \"logout\", payload: null });\n              },\n              function (error) {}\n            )\n          }\n        >\n          <ExitToAppIcon />\n        </div>\n      </div>\n      <div className=\"sidebar__chats\">{setRoutes()}</div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction ChatMessage({ message }) {\n  let uid = useSelector((state) => state.login.user.uid);\n  useEffect(() => {\n    document\n      .getElementsByClassName(\"allmessageshow\")[0]\n      .scrollTo(\n        0,\n        document.getElementsByClassName(\"allmessageshow\")[0].scrollHeight\n      );\n  }, []);\n  return (\n    <div\n      className={`chat__message ${\n        message.user.uid == uid ? \"chat__sender\" : \"\"\n      }`}\n    >\n      {message.message}\n      <span className=\"chat__timestamp\">{`${new Date().getHours()}:${new Date().getMinutes()}`}</span>\n    </div>\n  );\n}\n\nexport default ChatMessage;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport db from \"../firebase\";\n\nconst ChatRoomBody = ({ roomId }) => {\n  const [messages, setMessages] = useState([]);\n  const refallmessages = useRef(null);\n  useEffect(() => {\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setMessages(\n          snapshot.docs.map((doc) => ({ id: doc.id, data: doc.data() }))\n        );\n      });\n  }, [roomId]);\n  console.log(messages);\n  return (\n    <div className=\"chat__body\">\n      <div className=\"allmessageshow\" ref={refallmessages}>\n        {messages.length !== 0\n          ? messages.map((message) => (\n              <ChatMessage key={message.id} message={message.data} />\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatRoomBody;\n","import React, { Fragment, useState, useRef } from \"react\";\nimport ChatMessage from \"./ChatMessage\";\nimport axios from \"axios\";\nimport ChatRoomBody from \"./ChatRoomBody\";\nimport db from \"../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport firebase from \"firebase\";\n\nconst ChatRoom = ({ chatInfo }) => {\n  let user = useSelector((state) => state.login.user);\n  const [message, setMessage] = useState(\"\");\n  const onMessageSend = (e) => {\n    e.preventDefault();\n    db.collection(\"rooms\")\n      .doc(chatInfo.roomId)\n      .collection(\"messages\")\n      .add({\n        message,\n        user: {\n          uid: user.uid,\n          email: user.email,\n          displayName: user.displayName,\n        },\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      })\n      .then(function (docRef) {\n        // chatBodyRef.current.scrollTo(0, chatBodyRef.current.height);\n        document\n          .getElementsByClassName(\"allmessageshow\")[0]\n          .scrollTo(\n            0,\n            document.getElementsByClassName(\"allmessageshow\")[0].scrollHeight\n          );\n        setMessage(\"\");\n      });\n  };\n  return (\n    <Fragment>\n      <div className=\"chat__header\">\n        <div className=\"chat__headerInfo\">\n          <h3 style={{ color: \"black\" }}>\n            {chatInfo.detailsOfFriend.displayName}\n          </h3>\n          <div\n            style={{\n              fontWeight: \"100\",\n              fontSize: \"13px\",\n              marginTop: \"5px\",\n              color: \"#bebebe\",\n            }}\n          >\n            last seen today at 11:07 AM\n          </div>\n        </div>\n      </div>\n\n      <ChatRoomBody roomId={chatInfo.roomId} />\n\n      <div className=\"chat__footer\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Type a message\"\n            name=\"message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <button type=\"submit\" onClick={onMessageSend}>\n            Send message\n          </button>\n        </form>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ChatRoom;\n","import React from \"react\";\nimport \"./Chat.css\";\nimport ChatRoom from \"./ChatRoom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst Chat = () => {\n  let selectedChat = useSelector((state) => state.selectChat.selectedChat);\n  return (\n    <div className=\"chat\">\n      {selectedChat ? (\n        <ChatRoom chatInfo={selectedChat} />\n      ) : (\n        <div\n          style={{\n            color: \"#bbb7b7\",\n            fontSize: \"30px\",\n          }}\n        >\n          Please select a chat to continue\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"../firebase\";\nimport { useDispatch } from \"react-redux\";\nimport db from \"../firebase\";\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const login = () => {\n    auth\n      .signInWithPopup(provider)\n      .then((result) => {\n        const usersRef = db.collection(\"users\");\n        usersRef\n          .where(\"email\", \"==\", result.user.email)\n          .get()\n          .then(function (querySnapshot) {\n            var count = 0;\n            querySnapshot.forEach(function (doc) {\n              count++;\n            });\n            if (count === 0) {\n              usersRef\n                .add({\n                  uid: result.user.uid,\n                  email: result.user.email,\n                  displayName: result.user.displayName,\n                })\n                .then(function (docRef) {\n                  dispatch({ type: \"login\", payload: result.user });\n                })\n                .catch(function (error) {});\n            } else {\n              dispatch({ type: \"login\", payload: result.user });\n            }\n          })\n          .catch(function (error) {});\n      })\n      .catch((err) => alert(err));\n  };\n  // admin.auth().g\n  return (\n    <div>\n      <Button variant=\"contained\" color=\"primary\" onClick={login}>\n        SIGN WITH GOOGLE TO CHAT\n      </Button>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat\";\nimport Login from \"./Screens/Login\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { auth } from \"./firebase\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [selectedChatInfo, setSelectedChatInfo] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        dispatch({ type: \"login\", payload: user });\n      } else {\n        // No user is signed in.\n        dispatch({ type: \"login\", payload: null });\n      }\n    });\n  }, []);\n  let user = useSelector((state) => state.login.user);\n  // const [messages, setMessages] = useState([]);\n  // const getMessages = async () => {\n  //   const response = await axios.get(\"http://localhost:9000/messages/sync\");\n  //   setMessages(response.data);\n  // };\n  // useEffect(() => {\n  //   getMessages();\n  // }, []);\n  // useEffect(() => {\n  //   var pusher = new Pusher(\"2256729c27acaf0877a1\", {\n  //     cluster: \"ap2\",\n  //   });\n\n  //   var channel = pusher.subscribe(\"messages\");\n  //   channel.bind(\"inserted\", function (data) {\n  //     setMessages([...messages, data]);\n  //   });\n  // }, [messages]);\n  // console.log(messages);\n  return (\n    <div className=\"app\">\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Sidebar selectChat={(sChatInfo) => setSelectedChatInfo(sChatInfo)} />\n          <Chat selectedChatInfo={selectedChatInfo} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport ChatList from \"../components/ChatList\";\n\nconst login = (state = { user: null }, action) => {\n  switch (action.type) {\n    case \"login\":\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectChat = (state = { selectedChat: null }, action) => {\n  switch (action.type) {\n    case \"selectedtochat\":\n      return {\n        ...state,\n        selectedChat: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nconst appReducer = combineReducers({\n  login,\n  selectChat,\n});\n\nconst rootReducer = (state, action) => {\n  // Clear all data in redux store to initial.\n  if (action.type === \"logout\") {\n    state = undefined;\n  }\n  return appReducer(state, action);\n};\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}